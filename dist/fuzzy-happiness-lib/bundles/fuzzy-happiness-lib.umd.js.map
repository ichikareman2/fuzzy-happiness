{"version":3,"file":"fuzzy-happiness-lib.umd.js","sources":["../../../projects/fuzzy-happiness-lib/src/lib/fuzzy-happiness-lib.service.ts","../../../projects/fuzzy-happiness-lib/src/lib/fuzzy-happiness-lib.component.ts","../../../projects/fuzzy-happiness-lib/src/lib/models/mode.model.ts","../../../projects/fuzzy-happiness-lib/src/lib/button/button.component.ts","../../../projects/fuzzy-happiness-lib/src/lib/button/button.component.html","../../../projects/fuzzy-happiness-lib/src/lib/fuzzy-happiness-lib.module.ts","../../../projects/fuzzy-happiness-lib/src/public-api.ts","../../../projects/fuzzy-happiness-lib/src/fuzzy-happiness-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuzzyHappinessLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-fuzzy-happiness-lib',\n  template: `\n    <p>\n      fuzzy-happiness-lib works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class FuzzyHappinessLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","const PrimaryColor = 'blue',\r\n  GrayColor = 'gray',\r\n  DangerColor = 'red',\r\n  WarningColor = 'yellow',\r\n  SuccessColor = 'green',\r\n  WhiteColor = 'white',\r\n  BlackColor = 'black',\r\n  NoneColor = '';\r\n\r\n\r\nexport enum Mode {\r\n  Primary = 'blue',\r\n  Gray = 'gray',\r\n  Danger = 'red',\r\n  Warning = 'yellow',\r\n  White = 'white',\r\n  Black = 'black',\r\n  None = ''\r\n}\r\n\r\nexport const ModeTextColorClass = {\r\n  [Mode.Primary]: 'text-white',\r\n  [Mode.Gray]: 'text-black',\r\n  [Mode.Danger]: 'text-white',\r\n  [Mode.Warning]: 'text-white',\r\n  [Mode.White]: 'text-black',\r\n  [Mode.Black]: 'text-white',\r\n  [Mode.None]: 'text-black'\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Mode, ModeTextColorClass } from '../models/mode.model';\n\n@Component({\n  selector: 'lib-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css', '../styles/tailwind.dev.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n  // host: {'class': 'someClass1'}\n})\nexport class ButtonComponent implements OnInit {\n  // @Input() textColor: string = '';\n  // @Input() theme: string = '';\n  @Input() buttonClass: string = '';\n\n  readonly modeTextColorClass = ModeTextColorClass;\n  @Input() mode: Mode = Mode.None;\n  // @Input()\n  @Output() onClick = new EventEmitter<Event>();\n\n  constructor() {\n    const a = this.modeTextColorClass['white'];\n  }\n\n  ngOnInit(): void {}\n\n}\n","<button type=\"button\" (click)=\"onClick.emit($event)\"\n  [class]=\"buttonClass + ' ' +\n\n    (mode ? 'bg-'+mode+'-600' : '') + ' ' +\n    (mode ? 'active:bg-'+mode+'-800' : '') + ' ' +\n    (mode ? modeTextColorClass[mode] : '') + ' ' +\n    '\n    active:shadow-inner\n    shadow\n\n    rounded\n    font-sans\n\n    p-3'\n    \">\n  <ng-content></ng-content>\n</button>\n<!--\n    (theme ? 'bg-'+theme+'-600' : '') + ' ' +\n    (theme ? 'active:bg-'+theme+'-800' : '') + ' ' +\n    (textColor ? 'text-'+textColor : '') + ' ' +\n-->\n","import { NgModule } from '@angular/core';\nimport { FuzzyHappinessLibComponent } from './fuzzy-happiness-lib.component';\nimport { ButtonComponent } from './button/button.component';\n\n\n\n@NgModule({\n  declarations: [\n    FuzzyHappinessLibComponent,\n    ButtonComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    FuzzyHappinessLibComponent\n  ]\n})\nexport class FuzzyHappinessLibModule { }\n","/*\n * Public API Surface of fuzzy-happiness-lib\n */\n\nexport * from './lib/fuzzy-happiness-lib.service';\nexport * from './lib/fuzzy-happiness-lib.component';\nexport * from './lib/fuzzy-happiness-lib.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Injectable","Component","EventEmitter","ChangeDetectionStrategy","Input","Output","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOE;SAAiB;;;+IAFN,wBAAwB;mJAAxB,wBAAwB,cAFvB,MAAM;qHAEP,wBAAwB;sBAHpCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCUC;SAAiB;QAEjB,6CAAQ,GAAR;SACC;;;iJALU,0BAA0B;0HAA1B,0BAA0B,0EAR3B,2DAIT;qHAIU,0BAA0B;sBAVtCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,2DAIT;wBACD,MAAM,EAAE,EACP;qBACF;;;;ICXD,IAAM,YAAY,GAAG,MAAM,EACzB,SAAS,GAAG,MAAM,EAClB,WAAW,GAAG,KAAK,EACnB,YAAY,GAAG,QAAQ,EACvB,YAAY,GAAG,OAAO,EACtB,UAAU,GAAG,OAAO,EACpB,UAAU,GAAG,OAAO,EACpB,SAAS,GAAG,EAAE,CAAC;IAGjB,IAAY,IAQX;IARD,WAAY,IAAI;QACd,wBAAgB,CAAA;QAChB,qBAAa,CAAA;QACb,sBAAc,CAAA;QACd,0BAAkB,CAAA;QAClB,uBAAe,CAAA;QACf,uBAAe,CAAA;QACf,iBAAS,CAAA;IACX,CAAC,EARW,IAAI,KAAJ,IAAI,QAQf;IAEM,IAAM,kBAAkB;QAC7B,GAAC,IAAI,CAAC,OAAO,IAAG,YAAY;QAC5B,GAAC,IAAI,CAAC,IAAI,IAAG,YAAY;QACzB,GAAC,IAAI,CAAC,MAAM,IAAG,YAAY;QAC3B,GAAC,IAAI,CAAC,OAAO,IAAG,YAAY;QAC5B,GAAC,IAAI,CAAC,KAAK,IAAG,YAAY;QAC1B,GAAC,IAAI,CAAC,KAAK,IAAG,YAAY;QAC1B,GAAC,IAAI,CAAC,IAAI,IAAG,YAAY;WAC1B;;IClBD;QAUE;;;YAPS,gBAAW,GAAW,EAAE,CAAC;YAEzB,uBAAkB,GAAG,kBAAkB,CAAC;YACxC,SAAI,GAAS,IAAI,CAAC,IAAI,CAAC;;YAEtB,YAAO,GAAG,IAAIC,eAAY,EAAS,CAAC;YAG5C,IAAM,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;SAC5C;QAED,kCAAQ,GAAR,eAAmB;;;sIAdR,eAAe;+GAAf,eAAe,oJCV5B,6hBAsBA;qHDZa,eAAe;sBAP3BD,YAAS;uBAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,WAAW,EAAE,yBAAyB;wBACtC,SAAS,EAAE,CAAC,wBAAwB,EAAE,4BAA4B,CAAC;wBACnE,eAAe,EAAEE,0BAAuB,CAAC,MAAM;;qBAEhD;8EAIU,WAAW;0BAAnBC,QAAK;oBAGG,IAAI;0BAAZA,QAAK;oBAEI,OAAO;0BAAhBC,SAAM;;;;QEDT;;;;8IAAa,uBAAuB;+IAAvB,uBAAuB,iBAThC,0BAA0B;YAC1B,eAAe,aAKf,0BAA0B;+IAGjB,uBAAuB,YANzB,EACR;qHAKU,uBAAuB;sBAXnCC,WAAQ;uBAAC;wBACR,YAAY,EAAE;4BACZ,0BAA0B;4BAC1B,eAAe;yBAChB;wBACD,OAAO,EAAE,EACR;wBACD,OAAO,EAAE;4BACP,0BAA0B;yBAC3B;qBACF;;;IChBD;;;;ICAA;;;;;;;;;;;;;;"}